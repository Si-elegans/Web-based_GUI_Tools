from django.conf.urls import url, include
from restAPI import views
from rest_framework.routers import DefaultRouter
# Create a router and register our viewsets with it.
router = DefaultRouter()



urlpatterns = [
    #url(r'^behaviouralExperiments/$', views.behaviouralExperiment_list),
    #url(r'^behaviouralExperiments/(?P<pk>[0-9]+)/$', views.behaviouralExperiment_detail),
    ###Why we use as_view() below => TypeError at / __init__() takes exactly 1 argument (2 given)
    ##http://stackoverflow.com/questions/25858494/typeerror-at-init-takes-exactly-1-argument-2-given
    url(r'^', include(router.urls)), 
    url(r'^api-auth/', include('rest_framework.urls', namespace='rest_framework')),
    # url(r'^CubeType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.CubeDetail.as_view()),
    # url(r'^CubeType/$', views.CubeList.as_view() )
    url(r'^behaviouralExperiments_nested/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.behaviourExperiment_nested_detail.as_view(),
                    name='behaviouralExperiments_nested_uuid'),
    url(r'^behaviouralExperiments_nested/$', views.behaviourExperiment_nested_type_ViewSet.as_view()),
    url(r'^behaviouralExperimentsFull/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$',
        views.behaviourExperimentFullType_detail.as_view(),
        name='behaviouralExperimentsFull_uuid'),
    url(r'^behaviouralExperimentsFull/$', views.behaviourExperimentFullType_ViewSet.as_view()),
    url(r'^shareBehaviouralExperiment/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.shareBehaviouralExperiment_detail().as_view()),
    url(r'^shareBehaviouralExperiment/$', views.shareBehaviouralExperiment_ViewSet.as_view()),
    url(r'^sharePEresult/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.share_pe_results_detail().as_view()),
    url(r'^sharePEresult/$', views.share_pe_results_ViewSet.as_view()),
    url(r'^shareRBresult/(?P<pk>[0-9]+)/$', views.share_rb_results_detail().as_view()),
    url(r'^shareRBresult/$', views.share_rb_results_ViewSet.as_view()),
    url(r'^shareNeuronModel/(?P<pk>[0-9]+)/$', views.share_neuronmodels_detail().as_view()),
    url(r'^shareNeuronModel/$', views.share_neuronmodels_ViewSet.as_view()),
    url(r'^shareNetworkModel/(?P<pk>[0-9]+)/$', views.share_networkmodels_detail().as_view()),
    url(r'^shareNetworkModel/$', views.share_networkmodels_ViewSet.as_view()),
    url(r'^reservations/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.reservation_detail().as_view()),
    url(r'^reservations/$', views.reservation_ViewSet.as_view()),
    url(r'^PE_results/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.PE_results_detail().as_view()),
    url(r'^PE_results/$', views.PE_results_ViewSet.as_view()),
    url(r'^PE_results_files/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.PE_results_files_detail().as_view()),
    url(r'^PE_results_files/$', views.PE_results_files_ViewSet.as_view()),
    url(r'^CubeType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.CubeType_detail().as_view()),
    url(r'^CubeType/$', views.CubeType_ViewSet.as_view()),
    url(r'^CylinderType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.CylinderType_detail().as_view()),
    url(r'^CylinderType/$', views.CylinderType_ViewSet.as_view()),
    url(r'^HexagonType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.HexagonType_detail().as_view()),
    url(r'^HexagonType/$', views.HexagonType_ViewSet.as_view()),
    # GE: When use 2 serializers for one model, the API Root page created by the Django Rest Framework,
    # assigns the same url to both  "behaviouralExperiments": "https://localhost:8000/restAPI/behaviouralExperimentsFull/",
    # and "behaviouralExperimentsFull": "https://localhost:8000/restAPI/behaviouralExperimentsFull/",
    # but https://localhost:8000/restAPI/behaviouralExperiments/ still works
    url(r'^behaviouralExperiments/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.behaviourExperimentType_detail().as_view()),
    url(r'^behaviouralExperiments/$', views.behaviourExperimentType_ViewSet.as_view()),
    url(r'^chemicalType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.chemicalType_detail().as_view()),
    url(r'^chemicalType/$', views.chemicalType_ViewSet.as_view()),
    url(r'^chemotaxisExperimentWideType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.chemotaxisExperimentWideType_detail().as_view()),
    url(r'^chemotaxisExperimentWideType/$', views.chemotaxisExperimentWideType_ViewSet.as_view()),
    url(r'^chemotaxisQuadrants_1_Type/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.chemotaxisQuadrants_1_Type_detail().as_view()),
    url(r'^chemotaxisQuadrants_1_Type/$', views.chemotaxisQuadrants_1_Type_ViewSet.as_view()),
    url(r'^chemotaxisQuadrants_2_Type/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.chemotaxisQuadrants_2_Type_detail().as_view()),
    url(r'^chemotaxisQuadrants_2_Type/$', views.chemotaxisQuadrants_2_Type_ViewSet.as_view()),
    url(r'^chemotaxisQuadrants_4_Type/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.chemotaxisQuadrants_4_Type_detail().as_view()),
    url(r'^chemotaxisQuadrants_4_Type/$', views.chemotaxisQuadrants_4_Type_ViewSet.as_view()),
    url(r'^chemotaxisTimeEventType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.chemotaxisTimeEventType_detail().as_view()),
    url(r'^chemotaxisTimeEventType/$', views.chemotaxisTimeEventType_ViewSet.as_view()),
    url(r'^chemotaxisTimet0tot1Type/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.chemotaxisTimet0tot1Type_detail().as_view()),
    url(r'^chemotaxisTimet0tot1Type/$', views.chemotaxisTimet0tot1Type_ViewSet.as_view()),
    url(r'^crowdingType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.crowdingType_detail().as_view()),
    url(r'^crowdingType/$', views.crowdingType_ViewSet.as_view()),
    url(r'^directTouchType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.directTouchType_detail().as_view()),
    url(r'^directTouchType/$', views.directTouchType_ViewSet.as_view()),
    url(r'^staticPointSourceType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.staticPointSourceType_detail().as_view()),
    url(r'^staticPointSourceType/$', views.staticPointSourceType_ViewSet.as_view()),
    url(r'^dynamicDropTestType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.dynamicDropTestType_detail().as_view()),
    url(r'^dynamicDropTestType/$', views.dynamicDropTestType_ViewSet.as_view()),
    url(r'^electricShockType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.electricShockType_detail().as_view()),
    url(r'^electricShockType/$', views.electricShockType_ViewSet.as_view()),
    url(r'^environmentType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.environmentType_detail().as_view()),
    url(r'^environmentType/$', views.environmentType_ViewSet.as_view()),
    url(r'^experimentType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.experimentType_detail().as_view()),
    url(r'^experimentType/$', views.experimentType_ViewSet.as_view()),
    url(r'^experimentWideConfType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.experimentWideConfType_detail().as_view()),
    url(r'^experimentWideConfType/$', views.experimentWideConfType_ViewSet.as_view()),
    url(r'^galvanotaxisExperimentWideType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.galvanotaxisExperimentWideType_detail().as_view()),
    url(r'^galvanotaxisExperimentWideType/$', views.galvanotaxisExperimentWideType_ViewSet.as_view()),
    url(r'^galvanotaxisTimeEventType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.galvanotaxisTimeEventType_detail().as_view()),
    url(r'^galvanotaxisTimeEventType/$', views.galvanotaxisTimeEventType_ViewSet.as_view()),
    url(r'^galvanotaxisTimet0tot1Type/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.galvanotaxisTimet0tot1Type_detail().as_view()),
    url(r'^galvanotaxisTimet0tot1Type/$', views.galvanotaxisTimet0tot1Type_ViewSet.as_view()),
    url(r'^interactionAtSpecificTimeType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.interactionAtSpecificTimeType_detail().as_view()),
    url(r'^interactionAtSpecificTimeType/$', views.interactionAtSpecificTimeType_ViewSet.as_view()),
    url(r'^interactionFromt0tot1Type/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.interactionFromt0tot1Type_detail().as_view()),
    url(r'^interactionFromt0tot1Type/$', views.interactionFromt0tot1Type_ViewSet.as_view()),
    url(r'^linearThermalGradientType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.linearThermalGradientType_detail().as_view()),
    url(r'^linearThermalGradientType/$', views.linearThermalGradientType_ViewSet.as_view()),
    url(r'^mechanosensationExpWideType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.mechanosensationExpWideType_detail().as_view()),
    url(r'^mechanosensationExpWideType/$', views.mechanosensationExpWideType_ViewSet.as_view()),
    url(r'^mechanosensationTimeEventType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.mechanosensationTimeEventType_detail().as_view()),
    url(r'^mechanosensationTimeEventType/$', views.mechanosensationTimeEventType_ViewSet.as_view()),
    url(r'^mechanosensationTimet0tot1Type/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.mechanosensationTimet0tot1Type_detail().as_view()),
    url(r'^mechanosensationTimet0tot1Type/$', views.mechanosensationTimet0tot1Type_ViewSet.as_view()),
    url(r'^obstacleLocationType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.obstacleLocationType_detail().as_view()),
    url(r'^obstacleLocationType/$', views.obstacleLocationType_ViewSet.as_view()),
    url(r'^osmoticRingType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.osmoticRingType_detail().as_view()),
    url(r'^osmoticRingType/$', views.osmoticRingType_ViewSet.as_view()),
    url(r'^phototaxisExperimentWideType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.phototaxisExperimentWideType_detail().as_view()),
    url(r'^phototaxisExperimentWideType/$', views.phototaxisExperimentWideType_ViewSet.as_view()),
    url(r'^phototaxisTimeEventType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.phototaxisTimeEventType_detail().as_view()),
    url(r'^phototaxisTimeEventType/$', views.phototaxisTimeEventType_ViewSet.as_view()),
    url(r'^phototaxisTimet0tot1Type/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.phototaxisTimet0tot1Type_detail().as_view()),
    url(r'^phototaxisTimet0tot1Type/$', views.phototaxisTimet0tot1Type_ViewSet.as_view()),
    url(r'^plateConfigurationType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.plateConfigurationType_detail().as_view()),
    url(r'^plateConfigurationType/$', views.plateConfigurationType_ViewSet.as_view()),
    url(r'^plateTapType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.plateTapType_detail().as_view()),
    url(r'^plateTapType/$', views.plateTapType_ViewSet.as_view()),
    url(r'^pointSourceHeatAvoidanceType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.pointSourceHeatAvoidanceType_detail().as_view()),
    url(r'^pointSourceHeatAvoidanceType/$', views.pointSourceHeatAvoidanceType_ViewSet.as_view()),
    url(r'^pointSourceLightType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.pointSourceLightType_detail().as_view()),
    url(r'^pointSourceLightType/$', views.pointSourceLightType_ViewSet.as_view()),
    url(r'^temperatureChangeInTimeType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.temperatureChangeInTimeType_detail().as_view()),
    url(r'^temperatureChangeInTimeType/$', views.temperatureChangeInTimeType_ViewSet.as_view()),
    url(r'^termotaxisExperimentWideType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.termotaxisExperimentWideType_detail().as_view()),
    url(r'^termotaxisExperimentWideType/$', views.termotaxisExperimentWideType_ViewSet.as_view()),
    url(r'^termotaxisTimeEventType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.termotaxisTimeEventType_detail().as_view()),
    url(r'^termotaxisTimeEventType/$', views.termotaxisTimeEventType_ViewSet.as_view()),
    url(r'^termotaxisTimet0tot1Type/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.termotaxisTimet0tot1Type_detail().as_view()),
    url(r'^termotaxisTimet0tot1Type/$', views.termotaxisTimet0tot1Type_ViewSet.as_view()),
    url(r'^wormDataType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.wormDataType_detail().as_view()),
    url(r'^wormDataType/$', views.wormDataType_ViewSet.as_view()),
    url(r'^wormStatusType/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.wormStatusType_detail().as_view()),
    url(r'^wormStatusType/$', views.wormStatusType_ViewSet.as_view()),
    url(r'^environment_nested/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.environment_nested_type_detail().as_view()),
    url(r'^environment_nested/$', views.environment_nested_type_ViewSet.as_view()),
    url(r'^plateConfiguration_nested/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.plateConfiguration_nested_type_detail().as_view()),
    url(r'^plateConfiguration_nested/$', views.plateConfiguration_nested_type_ViewSet.as_view()),
    url(r'^wormStatus_nested/(?P<uuid>[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/$', views.wormStatus_nested_type_detail().as_view()),
    url(r'^wormStatus_nested/$', views.wormStatus_nested_type_ViewSet.as_view()),
]